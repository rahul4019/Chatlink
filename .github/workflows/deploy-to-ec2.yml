# .github/workflows/deploy-to-ec2.yml
name: ChatLink CI/CD Pipeline
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Images
        env:
          VITE_BASE_URL: ${{ secrets.VITE_BASE_URL }}
        run: |
          VITE_BASE_URL=$VITE_BASE_URL docker-compose build
          docker-compose push

      - name: Prepare EC2 Instance
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            mkdir -p ~/chatlink
            rm -rf ~/chatlink/nginx
            rm -f ~/chatlink/docker-compose.yml

      - name: Copy docker-compose file and nginx config
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: "docker-compose.yml,nginx/"
          target: ~/chatlink/
          overwrite: true

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          envs: |
            VITE_BASE_URL=${{ secrets.VITE_BASE_URL }}
            PORT=${{ secrets.PORT }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}
            ACCESS_TOKEN_EXPIRY=${{ secrets.ACCESS_TOKEN_EXPIRY }}
            REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}
            REFRESH_TOKEN_EXPIRY=${{ secrets.REFRESH_TOKEN_EXPIRY }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}
          script: |
            cd ~/chatlink
            docker-compose pull
            docker-compose down
            VITE_BASE_URL="$VITE_BASE_URL" \
            PORT="$PORT" \
            DB_HOST="$DB_HOST" \
            DB_NAME="$DB_NAME" \
            DB_PORT="$DB_PORT" \
            DB_USER="$DB_USER" \
            DB_PASSWORD="$DB_PASSWORD" \
            ACCESS_TOKEN_SECRET="$ACCESS_TOKEN_SECRET" \
            ACCESS_TOKEN_EXPIRY="$ACCESS_TOKEN_EXPIRY" \
            REFRESH_TOKEN_SECRET="$REFRESH_TOKEN_SECRET" \
            REFRESH_TOKEN_EXPIRY="$REFRESH_TOKEN_EXPIRY" \
            AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" \
            AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" \
            AWS_REGION="$AWS_REGION" \
            AWS_S3_BUCKET_NAME="$AWS_S3_BUCKET_NAME" \
            docker-compose up -d

      - name: Verify Deployment
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            docker ps
            docker-compose ps
